# Generated by Django 4.1.6 on 2023-03-11 10:24

import clients.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "first_name",
                    models.TextField(
                        error_messages={"invalid": "Имя указанo некорректно"},
                        validators=[
                            django.core.validators.RegexValidator(
                                regex="^([А-ЯЁ]{1}[][а-яё]{1,49})|([A-Z]{1}[a-z]{1,49})$"
                            ),
                            django.core.validators.MinLengthValidator(2),
                            django.core.validators.MaxLengthValidator(50),
                        ],
                        verbose_name="Имя",
                    ),
                ),
                (
                    "patronymic_name",
                    models.TextField(
                        blank=True,
                        error_messages={"invalid": "Отчество указанo некорректно"},
                        validators=[
                            django.core.validators.RegexValidator(
                                regex="^([А-ЯЁ]{1}[][а-яё]{1,49})|([A-Z]{1}[a-z]{1,49})$"
                            ),
                            django.core.validators.MinLengthValidator(2),
                            django.core.validators.MaxLengthValidator(50),
                        ],
                        verbose_name="Отчество",
                    ),
                ),
                (
                    "last_name",
                    models.TextField(
                        error_messages={"invalid": "Фамилия указана некорректно"},
                        validators=[
                            django.core.validators.RegexValidator(
                                regex="^([А-ЯЁ]{1}[][а-яё]{1,49})|([A-Z]{1}[a-z]{1,49})$"
                            ),
                            django.core.validators.MinLengthValidator(2),
                            django.core.validators.MaxLengthValidator(50),
                        ],
                        verbose_name="Фамилия",
                    ),
                ),
                (
                    "phone",
                    models.TextField(
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Телефон введен некорректно.Введите телефон в формате +79051234567",
                                regex="^((\\+7|7|8)[0-9]{10})$",
                            )
                        ],
                        verbose_name="Телефон",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={"invalid": "E-mail введен некорректно!"},
                        max_length=254,
                        unique=True,
                        validators=[
                            django.core.validators.EmailValidator(),
                            django.core.validators.MinLengthValidator(7),
                            django.core.validators.MaxLengthValidator(254),
                        ],
                        verbose_name="Электронная почта",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="Подтверждение"),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        upload_to="static/images/",
                        verbose_name="Фотография",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="Доступ к админке"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
                "ordering": ("last_name",),
            },
            managers=[
                ("objects", clients.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="student_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Студент",
                "verbose_name_plural": "Студенты",
            },
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.TextField(db_index=True, max_length=30, unique=True)),
            ],
            options={
                "verbose_name": "Предмет",
                "verbose_name_plural": "Предметы",
                "ordering": ("title",),
            },
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Учитель",
                "verbose_name_plural": "Учителя",
            },
        ),
        migrations.CreateModel(
            name="TeacherStudent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first_name",
                    models.TextField(
                        error_messages={"invalid": "Имя указанo некорректно"},
                        validators=[
                            django.core.validators.RegexValidator(
                                regex="^([А-ЯЁ]{1}[][а-яё]{1,49})|([A-Z]{1}[a-z]{1,49})$"
                            ),
                            django.core.validators.MinLengthValidator(2),
                            django.core.validators.MaxLengthValidator(50),
                        ],
                        verbose_name="Имя",
                    ),
                ),
                (
                    "patronymic_name",
                    models.TextField(
                        blank=True,
                        error_messages={"invalid": "Отчество указанo некорректно"},
                        validators=[
                            django.core.validators.RegexValidator(
                                regex="^([А-ЯЁ]{1}[][а-яё]{1,49})|([A-Z]{1}[a-z]{1,49})$"
                            ),
                            django.core.validators.MinLengthValidator(2),
                            django.core.validators.MaxLengthValidator(50),
                        ],
                        verbose_name="Отчество",
                    ),
                ),
                (
                    "last_name",
                    models.TextField(
                        error_messages={"invalid": "Фамилия указана некорректно"},
                        validators=[
                            django.core.validators.RegexValidator(
                                regex="^([А-ЯЁ]{1}[][а-яё]{1,49})|([A-Z]{1}[a-z]{1,49})$"
                            ),
                            django.core.validators.MinLengthValidator(2),
                            django.core.validators.MaxLengthValidator(50),
                        ],
                        verbose_name="Фамилия",
                    ),
                ),
                (
                    "phone",
                    models.TextField(
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Телефон введен некорректно.Введите телефон в формате +79051234567",
                                regex="^((\\+7|7|8)[0-9]{10})$",
                            )
                        ],
                        verbose_name="Телефон",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={"invalid": "E-mail введен некорректно!"},
                        max_length=254,
                        unique=True,
                        validators=[
                            django.core.validators.EmailValidator(),
                            django.core.validators.MinLengthValidator(7),
                            django.core.validators.MaxLengthValidator(254),
                        ],
                        verbose_name="Электронная почта",
                    ),
                ),
                (
                    "verify",
                    models.BooleanField(default=False, verbose_name="Подтверждение"),
                ),
                ("comment", models.TextField(blank=True)),
                (
                    "student",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="teacherM2M",
                        to="clients.student",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="studentM2M",
                        to="clients.teacher",
                    ),
                ),
            ],
            options={
                "verbose_name": "Учитель-Ученик",
                "verbose_name_plural": "Учитель-Ученики",
            },
        ),
        migrations.AddField(
            model_name="teacher",
            name="students",
            field=models.ManyToManyField(
                related_name="teachers",
                through="clients.TeacherStudent",
                to="clients.student",
            ),
        ),
        migrations.AddField(
            model_name="teacher",
            name="subjects",
            field=models.ManyToManyField(blank=True, related_name="teachers", to="clients.subject"),
        ),
        migrations.AddField(
            model_name="teacher",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="teacher_profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
    ]
